---
- name: Provisioning servers
  hosts: all
  become: yes
  tasks:

    #- name: Install ntp agent on centos
      #dnf:
        #name: chrony
          #state: present
          #use_backend: dnf5
          #      when: ansible_distribution == "Fedora" or ansible_distribution == "CentOS"

    - name: Install ntp agent on centos
      yum:
        name: "{{item}}"
        state: present
      when: ansible_distribution == "Fedora"
      loop:
        - chrony
        - wget
        - git
        - zip
        - unzip

    - name: Install ntp agent on ubuntu
      apt:
        name: "{{item}}"
        state: present
        update_cache: yes
      when: ansible_distribution == "Ubuntu"
      loop:
        - chrony
        - wget
        - git
        - zip
        - unzip

    - name: Start service on centos
      service:
        name: chronyd
        state: started
        enabled: yes
      when: ansible_distribution == "Fedora" or ansible_distribution == "CentOS"

    - name: Start service on ubuntu
      service:
        name: chrony
        state: started
        enabled: yes
      when: ansible_distribution == "Ubuntu"

    - name: Banner file
      copy:
        content: '# This server is managed my ansible'
        dest: /etc/motd
    
    - name: Create a folder
      file:
        path: /opt/test21
        state: directory

    - name: Deploy ntp agent conf on centos
      template:
        src: templates/ntpconf_centos
        dest: /etc/chrony.conf
        backup: yes
      when: ansible_distribution == "Fedora"
      notify:
        - Restart service on Centos


    - name: Deploy ntp agent conf on ubuntu
      template:
        src: templates/ntpconf_centos
        dest: /etc/chrony/conf.d
        backup: yes
      when: ansible_distribution == "Ubuntu"
      notify:
        - Restart service on ubuntu

  handlers:
    - name: Restart service on Centos
      service:
        name: chronyd
        state: restarted
        enabled: yes
      when: ansible_distribution == "Fedora"


    - name: Restart service on ubuntu
      service:
        name: chrony
        state: restarted
        enabled: yes
      when: ansible_distribution == "Ubuntu"
